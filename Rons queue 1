#include<stdio.h>
#include<stdlib.h>

struct c_queqe{
    int size;
    int f;
    int r;
    int *arr;
};

int isfull(struct c_queqe *q)
{
    if((q->r+1)%q->size==q->f)
    {
        return 1;
    }
    else 
    return 0;
}
int isempty(struct c_queqe *q)
{
    if(q->f==-1 && q->r==-1)
    {
        return 1;
    }
    else 
    return 0;
}
void enqueqe(struct c_queqe *q,int value)
{
    if(isfull(q))
    {
        printf("queqe overflow(FULL)\n");
    }

    if(q->f==-1 && q->r==-1)
    {
        q->f=q->r=0;
        q->arr[q->r]=value;
    }
    else
    {
        q->r=(q->r+1)%q->size;
        q->arr[q->r]=value;
    }
}
int dequeqe(struct c_queqe *q)
{
    if(isempty(q))
    {
        printf("queqe underflow(EMPTY)\n");
    }
    if(q->f==q->r)
    {
        printf("deleted element=%d\n",q->arr[q->f]);
        q->f=q->r=-1;
        // return q->arr[q->f];
    }
    else
    {
         printf("deleted element=%d\n",q->arr[q->f]);
        q->f=(q->f+1)%q->size;
        // q->arr[q->f]=value;
        // return q->arr[q->f];
    }
}

int main()
{
    struct c_queqe q;
    q.f=q.r=-1;
    q.size=4;
    q.arr=(int *)malloc(q.size*sizeof(int));

    if(isempty(&q))
    {
        printf("queqe is empty\n");
    }

    enqueqe(&q,12);
    enqueqe(&q,50);
    enqueqe(&q,100);
    enqueqe(&q,17);
    // enqueqe(&q,17);
    dequeqe(&q);
    dequeqe(&q);
    dequeqe(&q);
    dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // dequeqe(&q);
    // enqueqe(&q,17);
    // enqueqe(&q,17);
    // enqueqe(&q,13);
    // enqueqe(&q,17);
    // enqueqe(&q,16);
    // enqueqe(&q,16);
    // enqueqe(&q,16);
    // enqueqe(&q,16);
    // enqueqe(&q,16);
    // enqueqe(&q,15);

    // printf("dequeuing element %d\n",dequeqe(&q));
    // printf("dequeuing element %d\n",dequeqe(&q));
    // // printf("dequeuing element %d\n",dequeqe(&q));
    // // // printf("dequeuing element %d\n",dequeqe(&q));
    //   enqueqe(&q,12);
    //     enqueqe(&q,12);
    // //       enqueqe(&q,12);
    // //       enqueqe(&q,12);

   
    return 0;
}
